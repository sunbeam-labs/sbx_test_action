name: 'Test Sunbeam Extension'
description: 'Test full run of sunbeam extension'
branding:
  icon: 'check-circle'
  color: 'green'
inputs:
  sunbeam-version:
    description: 'Branch or tag of sunbeam to install'
    required: false
    default: 'main'
  extension-full-name:
    description: 'Full name of this extension (e.g. sunbeam-labs/sbx_template or Ulthran/sbx_demic)'
    required: false
    default: ${{ github.event.pull_request.head.repo.full_name }}
  extension-branch-name:
    description: 'Branch name of extension to be tested (e.g. main or 1-feature-branch)'
    required: false
    default: ${{ github.head_ref }}
  other-extensions:
    description: 'Any other extensions needed to run this one (use comma-separated string like "sunbeam-labs/sbx_one,other-user/sbx_two")'
    required: false
    default: ''
  test-directory:
    description: 'Directory that contains e2e tests which need all of sunbeam to run'
    required: false
    default: '.tests/'
  snakefmt-directory:
    description: 'Path to snakefiles for linting'
    required: false
    default: '*.smk'
  black-directory:
    description: 'Path to python files for linting'
    required: false
    default: '.'
    
runs:
  using: "composite"
  steps:
      - name: Setup micromamba
        uses: mamba-org/setup-micromamba@v2
        with:
          environment-name: lockenv
          create-args: python=3.11
          init-shell: bash
          cache-downloads: true
      
      - name: Install Sunbeam
        shell: bash -l {0}
        run: |
          python -m pip install --upgrade pip
          git clone --depth 1 --branch ${{ inputs.sunbeam-version }} https://github.com/sunbeam-labs/sunbeam.git sunbeam
          cd sunbeam
          pip install -e .[dev]
      
      - name: Install extra extensions
        shell: bash -l {0}
        env:
          EXTENSIONS_LIST: ${{ inputs.other-extensions }}
          SUNBEAM_EXTENSIONS: ${{ github.workspace }}
        run: |
          for i in ${EXTENSIONS_LIST//,/ }
          do
              sunbeam extend https://github.com/$i
          done

      - name: Lint
        shell: bash -l {0}
        run: |
          echo "Linting snakefiles in directory: ${{ inputs.snakefmt-directory }}"
          snakefmt --check ${{ inputs.snakefmt-directory }}
          echo "Linting python files in directory: ${{ inputs.black-directory }}"
          black --check --diff ${{ inputs.black-directory }}
          
      - name: Run Tests
        shell: bash -l {0}
        env:
          SUNBEAM_EXTENSIONS: ${{ github.workspace }}
        run: |
          set -eo pipefail  # Make the script fail on errors
          pytest -vvvv -l --tb=long ${{ inputs.test-directory }} 2>&1 | tee pytest_output.txt
          EXIT_CODE=${PIPESTATUS[0]}  # Save pytest exit code
          sed -n '/= FAILURES =/q;p' pytest_output.txt >> $GITHUB_STEP_SUMMARY
          exit $EXIT_CODE
